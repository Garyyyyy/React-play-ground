{"ast":null,"code":"var _jsxFileName = \"/Users/ygong/Documents/workspace-spring-tool-suite-4-4.1.0.RELEASE/playground/my-app/src/index.js\";\nimport ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport './index.css'; // class Statement extends Component{\n// \tconstructor(props){\n// \t\tsuper(props);\n// \t\tconsole.log(this.props);\n// \t\tconsole.log(this.props.props.currentVersion);\n// \t}\n// \trender(){\n// \t\treturn (\n// \t\t\t<tr>\n// \t\t\t<th>{this.props.props.documentType}</th>\n// \t\t\t<th>{this.props.props.currentVersion}</th>\n// \t\t\t<th>{this.props.props.previousVersion}</th>\n// \t\t\t<th>{this.props.props.comparison}</th>\n// \t\t\t</tr>\n// \t\t\t)\n// \t\t}\n// }\n// class StatementTable extends Component{\n// \tconstructor(props){\n// \t\tsuper(props);\n// \t\tthis.state = {statements: []}\n// \t}\n//   componentDidMount() {\n//   \t const params = {cusip:'cusip', reportingDate:'reportingDate', statementType:'statementType', reviewStep:'reviewStep'};\n//   \t fetch('http://localhost:9000/getStatements?cusip=${encodeURIComponent(params.cusip)}&reportingDate=${encodeURIComponent(params.reportingDate)}&statementType=${encodeURIComponent(params.statementType)}&reviewStep=${encodeURIComponent(params.reviewStep)}')\n//   \t .then(res => res.json())\n//   \t .then((data) => {\n//   \t \tthis.setState({ statements: data})\n//   \t })\n//   \t .catch(console.log)\n//   }\n// \trender() {\n// \t\tconst statements = this.state.statements\n// \t\treturn(\n// \t\tstatements.map((item, index) => {\n// \t\treturn (\n// \t\t\t<table>\n// \t\t\t<Statement props = {item} />\n// \t\t\t</table>\n// \t\t\t)}\n// \t\t)\n// \t\t);\n// \t}\n// }\n\nclass CheckListMain extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"data\": [{\n        \"sectionId\": \"1\",\n        \"sectionName\": \"section1\",\n        \"itemList\": [{\n          \"itemId\": \"i1\",\n          \"text\": \"what is your name?\",\n          \"options\": [\"Done\", \"N/A\"]\n        }, {\n          \"itemId\": \"i1\",\n          \"text\": \"what is your age?\",\n          \"options\": [\"Done\", \"N/A\"]\n        }]\n      }, {\n        \"sectionId\": \"2\",\n        \"sectionName\": \"section2\",\n        \"itemList\": [{\n          \"itemId\": \"i3\",\n          \"text\": \"what is your fav food?\",\n          \"options\": [\"Done\", \"N/A\"]\n        }, {\n          \"itemId\": \"i4\",\n          \"text\": \"what is your fav song?\",\n          \"options\": [\"Done\", \"N/A\"]\n        }]\n      }]\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    let data = [...this.state.data];\n    data[event.target.dataset.id][event.target.className] = event.target.value.toUpperCase();\n    this.setState({\n      data\n    }, () => console.log(this.state.data));\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 5\n      }\n    }, \" Form \"), this.state.data.map((section, index) => {\n      return /*#__PURE__*/React.createElement(CheckListSection, {\n        props: section,\n        handleChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 6\n        }\n      });\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }));\n  }\n\n}\n\nclass CheckListSection extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return this.props.props.itemList.map((item, index) => {\n      return /*#__PURE__*/React.createElement(CheckList, {\n        props: item,\n        handleChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 7\n        }\n      });\n    });\n  }\n\n}\n\nclass CheckList extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 4\n      }\n    }, this.props.props.text), this.props.props.options.map((option, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"index\",\n        name: \"index\",\n        value: \"index\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"vehicle1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, option));\n    }));\n  }\n\n} // ReactDOM.render(<StatementTable />, document.getElementById('root'));\n\n\nReactDOM.render( /*#__PURE__*/React.createElement(CheckListMain, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 17\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/ygong/Documents/workspace-spring-tool-suite-4-4.1.0.RELEASE/playground/my-app/src/index.js"],"names":["ReactDOM","React","Component","CheckListMain","constructor","props","state","handleChange","bind","handleSubmit","event","data","target","dataset","id","className","value","toUpperCase","setState","console","log","preventDefault","render","map","section","index","CheckListSection","itemList","item","CheckList","text","options","option","document","getElementById"],"mappings":"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","sourcesContent":["import ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport './index.css';\n\n// class Statement extends Component{\n// \tconstructor(props){\n// \t\tsuper(props);\n// \t\tconsole.log(this.props);\n// \t\tconsole.log(this.props.props.currentVersion);\n// \t}\n\n\t\n// \trender(){\n// \t\treturn (\n// \t\t\t<tr>\n// \t\t\t<th>{this.props.props.documentType}</th>\n// \t\t\t<th>{this.props.props.currentVersion}</th>\n// \t\t\t<th>{this.props.props.previousVersion}</th>\n// \t\t\t<th>{this.props.props.comparison}</th>\n// \t\t\t</tr>\n// \t\t\t)\n// \t\t}\n// }\n\n// class StatementTable extends Component{\n// \tconstructor(props){\n// \t\tsuper(props);\n// \t\tthis.state = {statements: []}\n// \t}\n\n\n//   componentDidMount() {\n//   \t const params = {cusip:'cusip', reportingDate:'reportingDate', statementType:'statementType', reviewStep:'reviewStep'};\n//   \t fetch('http://localhost:9000/getStatements?cusip=${encodeURIComponent(params.cusip)}&reportingDate=${encodeURIComponent(params.reportingDate)}&statementType=${encodeURIComponent(params.statementType)}&reviewStep=${encodeURIComponent(params.reviewStep)}')\n//   \t .then(res => res.json())\n//   \t .then((data) => {\n//   \t \tthis.setState({ statements: data})\n//   \t })\n//   \t .catch(console.log)\n//   }\n\n// \trender() {\n// \t\tconst statements = this.state.statements\n// \t\treturn(\n\n// \t\tstatements.map((item, index) => {\n// \t\treturn (\n// \t\t\t<table>\n// \t\t\t<Statement props = {item} />\n// \t\t\t</table>\n// \t\t\t)}\n// \t\t)\n// \t\t);\n// \t}\n// }\n\nclass CheckListMain extends Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\"data\": [{\"sectionId\":\"1\",\"sectionName\":\"section1\",\"itemList\":[{\"itemId\":\"i1\",\"text\":\"what is your name?\", \"options\":[\"Done\", \"N/A\"]},{\"itemId\":\"i1\",\"text\":\"what is your age?\", \"options\":[\"Done\", \"N/A\"]}]},{\"sectionId\":\"2\",\"sectionName\":\"section2\",\"itemList\":[{\"itemId\":\"i3\",\"text\":\"what is your fav food?\", \"options\":[\"Done\", \"N/A\"]},{\"itemId\":\"i4\",\"text\":\"what is your fav song?\", \"options\":[\"Done\", \"N/A\"]}]}]}\n\t    this.handleChange = this.handleChange.bind(this);\n\t    this.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\n  handleChange(event) {\n    let data = [...this.state.data]\n    data[event.target.dataset.id][event.target.className] = event.target.value.toUpperCase()\n    this.setState({ data }, () => console.log(this.state.data))\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n  }\n\n\trender() {\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<label> Form </label>\n\t\t\t\t{this.state.data.map((section, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t<CheckListSection props = {section} handleChange={this.handleChange}/>\n\t\t\t\t\t)})}\n\t\t\t\t<input type=\"submit\" value=\"submit\"/>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\nclass CheckListSection extends Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\tthis.props.props.itemList.map((item, index) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<CheckList props = {item} handleChange={this.handleChange} />\n\t\t\t\t)}\n\t\t\t)\n\t\t);\n\t}\n}\n\nclass CheckList extends Component{\n\tconstructor(props) {\n\t\tsuper(props);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t<label>{this.props.props.text}</label>\n\t\t\t  {this.props.props.options.map((option, index) =>{\n\t\t\t  \treturn(\n\t\t\t  \t  <div>\n\t\t\t\t  <input type=\"checkbox\" id=\"index\" name=\"index\" value=\"index\" onChange={this.handleChange}/>\n\t  \t\t\t  <label htmlFor=\"vehicle1\">{option}</label>\n\t  \t\t\t  </div>\n\t\t\t  \t)\n\t\t\t  })}\n\t\t\t</div>\n\t\t)\n\t}\n}\n\n// ReactDOM.render(<StatementTable />, document.getElementById('root'));\nReactDOM.render(<CheckListMain />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}